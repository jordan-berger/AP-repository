[alias]
preflight = ! bash -c "rm -f monitor/clock.json && openaps report invoke monitor/clock.json 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || (mm-stick warmup || sudo oref0-reset-usb; echo PREFLIGHT FAIL; sleep 120; exit 1)"
invoke = report invoke
monitor-cgm = report invoke monitor/glucose.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = 
iob = monitor/iob.json
enacted = enact/enacted.json
type = devicestatus.json
report = monitor/upload-status.json

[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = 

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/bg_targets_raw.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock.json
reporter = JSON
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = 

[report "settings/basal_profile.json"]
device = pump
use = read_basal_profile_std
reporter = JSON

[report "settings/insulin_sensitivities_raw.json"]
device = pump
use = read_insulin_sensitivies
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets_raw.json
preferences = preferences.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
device = get-profile
remainder = 
insulin_sensitivities = settings/insulin_sensitivities_raw.json

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/glucose.json"]
device = cgm
count = 5
use = iter_glucose
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = 
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "enact/enacted.json"]
device = oref0
remainder = monitor/suggested.json
use = shell
json_default = True
reporter = text

[device "ns-upload"]
vendor = openaps.vendors.process
extra = ns-upload.ini

[report "monitor/upload-status2.json"]
use = shell
reporter = text
type = devicestatus.json
json_default = True
report = monitor/upload-status2.json
device = ns-upload
remainder = bob

[report "output.json"]
use = shell
reporter = text
type = devicestatus.json
json_default = True
device = ns-upload
remainder = bob
payload = monitor/upload-status.json

